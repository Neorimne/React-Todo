{"version":3,"sources":["components/Contacts/contacts.module.css","components/Contacts/Form.js","components/Contacts/Contacts.js","components/Contacts/contactsContainer.js"],"names":["module","exports","FeedbackForm","props","onSubmit","handleSumbit","className","style","form","type","name","value","onChange","handleUserInput","email","rows","cols","comment","Contacts","useState","showOverlay","setShowOverlay","setName","setEmail","setComment","console","log","contactsWrapper","overlay","display","onClick","text","contactsHeader","formWrapper","e","preventDefault","setNewMessage","event","fieldName","target","fieldValue","ContactsContainer","connect","state","contactMessages"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,gBAAkB,kCAAkC,eAAiB,iCAAiC,KAAO,uBAAuB,QAAU,0BAA0B,KAAO,yB,8FCyBlLC,EAtBM,SAACC,GAClB,OACI,0BAAMC,SAAUD,EAAME,aAAcC,UAAWC,IAAMC,MACzC,+BACI,2CACA,2BAAOC,KAAK,OAAOC,KAAK,OAAOC,MAAOR,EAAMO,KAAME,SAAUT,EAAMU,mBAEtE,+BACI,4CACA,2BAAOJ,KAAK,OAAOC,KAAK,QAAQC,MAAOR,EAAMW,MAAOF,SAAUT,EAAMU,mBAExE,+BACI,8CACA,8BAAUE,KAAK,KAAKC,KAAK,KAAKN,KAAK,UAAUC,MAAOR,EAAMc,QAASL,SAAUT,EAAMU,mBAEvF,2BAAOJ,KAAK,SAASE,MAAM,aC6ChCO,EA1DE,SAACf,GAAU,IAAD,EAEegB,oBAAS,GAFxB,mBAEhBC,EAFgB,KAEHC,EAFG,OAICF,mBAAS,IAJV,mBAIhBT,EAJgB,KAIVY,EAJU,OAKGH,mBAAS,IALZ,mBAKhBL,EALgB,KAKTS,EALS,OAMOJ,mBAAS,IANhB,mBAMhBF,EANgB,KAMPO,EANO,KAmBvBC,QAAQC,IAAI,UAAWvB,GAqBvB,OACI,yBAAKG,UAAWC,IAAMoB,iBAClB,yBAAKrB,UAAWC,IAAMqB,QAASrB,MAAOa,EAAc,CAACS,QAAQ,SAAW,CAACA,QAAQ,QAC5EC,QAAU,WAAKT,GAAe,KAC/B,yBAAKf,UAAWC,IAAMwB,MAAtB,8BAEJ,yBAAKzB,UAAWC,IAAMyB,gBAClB,qDAEJ,yBAAK1B,UAAWC,IAAM0B,aAClB,kBAAC,EAAD,CAAc5B,aAzCL,SAAC6B,GAClBA,EAAEC,iBACFhC,EAAMiC,cAAc,CAChB1B,OACAI,QACAG,YAEJI,GAAe,IAmCFR,gBA9BO,SAACwB,GACrB,IAAMC,EAAYD,EAAME,OAAO7B,KACzB8B,EAAaH,EAAME,OAAO5B,MAEhC,OAAO2B,GACH,IAAK,OACDhB,EAAQkB,GACR,MACJ,IAAK,QACDjB,EAASiB,GACT,MACJ,IAAK,UACDhB,EAAWgB,KAmBN9B,KAAMA,EAAMI,MAAOA,EAAOG,QAASA,O,QC9ClDwB,EAAoBC,aANF,SAACC,GACtB,MAAO,CACNC,gBAAkBD,EAAMC,mBAIsB,CAACR,mBAAzBM,CAAyCxB,GAEpDuB","file":"static/js/3.61c7ecb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsWrapper\":\"contacts_contactsWrapper__1VYVQ\",\"contactsHeader\":\"contacts_contactsHeader__3FXi2\",\"form\":\"contacts_form__FoMhG\",\"overlay\":\"contacts_overlay__5EdQJ\",\"text\":\"contacts_text__VHYN4\"};","import React from 'react';\r\nimport style from './contacts.module.css';\r\n\r\n\r\nconst FeedbackForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSumbit} className={style.form} >\r\n                    <label>\r\n                        <div>YOUR NAME:</div>\r\n                        <input type=\"text\" name=\"name\" value={props.name} onChange={props.handleUserInput}/>\r\n                    </label>\r\n                    <label>\r\n                        <div>YOUR EMAIL:</div>\r\n                        <input type=\"text\" name=\"email\" value={props.email} onChange={props.handleUserInput} />\r\n                    </label>\r\n                    <label>\r\n                        <div>YOUR COMMENT:</div>\r\n                        <textarea rows=\"10\" cols=\"50\" name=\"comment\" value={props.comment} onChange={props.handleUserInput}/>\r\n                    </label>\r\n                    <input type=\"submit\" value=\"SUBMIT\" />\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default FeedbackForm;","import React, { useState } from 'react';\r\nimport style from './contacts.module.css';\r\nimport FeedbackForm from './Form';\r\n\r\n\r\n\r\nconst Contacts = (props) =>{\r\n    \r\n    const [showOverlay, setShowOverlay] = useState(false);\r\n    \r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [comment, setComment] = useState('');\r\n\r\n    \r\n    const handleSumbit = (e) => {\r\n        e.preventDefault();\r\n        props.setNewMessage({\r\n            name,\r\n            email,\r\n            comment\r\n        })\r\n        setShowOverlay(true);\r\n    }\r\n\r\n    console.log(\"props: \", props)\r\n\r\n    const handleUserInput = (event) => {\r\n        const fieldName = event.target.name;\r\n        const fieldValue = event.target.value;\r\n\r\n        switch(fieldName) {\r\n            case \"name\":\r\n                setName(fieldValue);\r\n                break;\r\n            case \"email\":\r\n                setEmail(fieldValue);\r\n                break;\r\n            case \"comment\":\r\n                setComment(fieldValue);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={style.contactsWrapper}>\r\n            <div className={style.overlay} style={showOverlay ? {display:'block'} : {display:'none'}}\r\n                 onClick ={()=>{setShowOverlay(false)}}>\r\n                <div className={style.text}>Thanks for your feedback!</div>\r\n            </div>\r\n            <div className={style.contactsHeader}>\r\n                <h2>LEAVE YOUR FEEDBACK!</h2>\r\n            </div>\r\n            <div className={style.formWrapper}>\r\n                <FeedbackForm handleSumbit={handleSumbit}\r\n                     handleUserInput={handleUserInput} \r\n                     name={name} email={email} comment={comment} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Contacts;","import { connect } from 'react-redux';\r\nimport Contacts from './Contacts';\r\nimport { setNewMessage } from '../../redux/contactReducer';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n    contactMessages : state.contactMessages\r\n   }\r\n}\r\n\r\nconst ContactsContainer = connect(mapStateToProps,{setNewMessage})(Contacts);\r\n\r\nexport default ContactsContainer"],"sourceRoot":""}